- name: create deployment
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - "vm_vars/credentials.yaml"
    - "vm_vars/settings.yaml"

  tasks:
  - name: master creation
    gandi_vps:
      gandi_api_key: "{{ gandi_api_key }}"
      name: "{{ item.name }}"
      machine_type: custom
      image: "{{ image }}"
      datacenter: "{{ datacenter }}"
      sshkey_ids:
        - "{{ gandi_ssh_key_id }}"
      cores: "{{ node_cpu }}"
      memory: "{{ node_mem }}"
      disk: "{{ node_disk }}"
      interfaces: {'privates': [{'vlan': "{{ vlan_name }}", 'ipv4': "{{ item.master_ip }}"}]}
      state: running
      farm: master_node
    with_items:
      - { name: master, master_ip: "{{ master_ip }}" }
    tags:
      - master
      - kube_cluster
    async: 7200
    poll: 0
    register: master_creation

  - name: nodes creation
    gandi_vps:
      gandi_api_key: "{{ gandi_api_key }}"
      name: "{{ item.name }}"
      image: "{{ image }}"
      machine_type: custom
      datacenter: "{{ datacenter }}"
      sshkey_ids:
        - "{{ gandi_ssh_key_id }}"
      cores: "{{ node_cpu }}"
      memory: "{{ node_mem }}"
      disk: "{{ node_disk }}"
      interfaces: {'privates': ['vlan': "{{ vlan_name }}"]}
      state: running
      farm: worker_node
    with_items:
      - { name: node0 }
      - { name: node1 }
      - { name: node2 }
      - { name: node3 }
    tags:
      - worker
      - kube_cluster
    async: 7200
    poll: 0
    register: worker_creation

  - name: wait for creation
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: jobs
    until: jobs.finished
    delay: 10
    retries: 300
    with_items: 
      - "{{ master_creation.results }}"
      - "{{ worker_creation.results }}"
