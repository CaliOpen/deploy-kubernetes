- name: Ensures {{ caliopen_config_path }} dir exists
  file: path={{ caliopen_config_path }} state=directory

- name: copy configs
  copy:
    src: "{{ item }}"
    dest: "{{ caliopen_config_path }}"
    owner: "root"
    mode: 0600
  with_fileglob:
    - "templates/configs/*"

- name: create localstorage
  shell: kubectl apply -f {{ yaml_url }}/storageclass/{{ item }}-storageclass.yaml
  with_items:
    - localstorage
  tags: storage
  when: not external

- name: create persistent volumes
  shell: kubectl apply -f {{ yaml_url }}/persistentvolumes/{{ item }}-persistentvolume.yaml
  with_items:
    - node0
    - node1
    - node2
  tags: storage
  when: not external

- name: create caliopen configs
  shell: kubectl create configmap caliopen-config --from-file={{ caliopen_config_path }}
  ignore_errors: yes

- name: create dns config
  shell: kubectl apply -f {{ yaml_url }}/configs/dns-config.yaml
  ignore_errors: yes

- name: create services
  shell: kubectl apply -f {{ yaml_url }}/services/{{ item }}-service.yaml
  with_items:
    - api
    - apiv1
    - broker
    - frontend
    - nats
    - redis
    - smtp

- name: create external service
  shell: kubectl apply -f {{ yaml_url }}/services/external-storage-service.yaml
  tags: external
  when: external

- name: create headless services
  shell: kubectl apply -f {{ yaml_url }}/services/{{ item }}-service.yaml
  with_items:
    - cassandra
    - elasticsearch
    - minio
  tags: storage
  when: not external

- name: create pvc
  shell: kubectl apply -f {{ yaml_url }}/volumeclaims/{{ item }}-persistentvolumeclaim.yaml
  with_items:
    - db
    - index
    - store
  tags: storage
  when: not external

- name: create storage deployments
  shell: kubectl apply -f {{ yaml_url }}/statefulsets/{{ item }}-statefulset.yaml
  with_items:
    - cassandra
    - elasticsearch
    - minio
  tags: storage
  when: not external

- name: create basic deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - redis
    - nats
    - smtp

- name: create go app deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - broker
    - api
  tags: go

- name: create python app deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - message-handler
    - apiv1
  tags: python

- name: create frontend app deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - frontend
  tags: frontend

- name: setup ingress controller and default backend
  shell: kubectl apply -f {{ yaml_url }}/ingress/{{ item }}-ingress.yaml
  with_items:
    - setup
  tags: ingress

- name: create services
  shell: kubectl apply -f {{ yaml_url }}/services/{{ item }}-service.yaml
  with_items:
    - nginx
  tags: ingress

- name: create ingress rules
  shell: kubectl apply -f {{ yaml_url }}/ingress/{{ item }}-ingress.yaml
  with_items:
    - caliopen
  tags: ingress
