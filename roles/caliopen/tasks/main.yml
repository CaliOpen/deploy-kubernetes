- name: Ensures {{ caliopen_config_path }} dir exists
  file: path={{ caliopen_config_path }} state=directory

- name: copy caliopen configs
  copy:
    src: "{{ item }}"
    dest: "{{ caliopen_config_path }}"
    owner: "root"
    mode: 0600
  with_fileglob:
    - "templates/configs/*"

- name: copy external services files
  template:
    src: templates/services/external-{{ item }}-service.yaml.j2
    dest: /etc/caliopen/external-{{ item }}-service.yaml
  with_items:
    - smtp
    - storage

- name: create caliopen configs
  shell: kubectl create configmap caliopen-config --from-file={{ caliopen_config_path }}
  ignore_errors: yes

- name: create services
  shell: kubectl apply -f {{ yaml_url }}/services/{{ item }}-service.yaml
  with_items:
    - api
    - apiv1
    - broker
    - frontend
    - nats
    - redis

- name: create external smtp service
  shell: kubectl apply -f /etc/caliopen/external-smtp-service.yaml
  tags: smtp
  when: externalsmtp

- name: create external storage service
  shell: kubectl apply -f /etc/caliopen/external-storage-service.yaml
  tags: storage
  when: externalstorage

- name: create localstorage
  shell: kubectl apply -f {{ yaml_url }}/storageclass/{{ item }}-storageclass.yaml
  with_items:
    - cassandra
    - elasticsearch
    - minio
  tags: storage
  when: not externalstorage

- name: create persistent volumes
  shell: kubectl apply -f {{ yaml_url }}/persistentvolumes/{{ item }}-persistentvolume.yaml
  with_items:
    - cassandra
    - elasticsearch
    - minio
  tags: storage
  when: not externalstorage

- name: create headless services
  shell: kubectl apply -f {{ yaml_url }}/services/{{ item }}-service.yaml
  with_items:
    - cassandra
    - elasticsearch
    - minio
  tags: storage
  when: not externalstorage

- name: create storage deployments
  shell: kubectl apply -f {{ yaml_url }}/statefulsets/{{ item }}-statefulset.yaml
  with_items:
    - cassandra
    - elasticsearch
    - minio
  tags: storage
  when: not externalstorage

- name: create basic deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - redis
    - nats

- name: create go app deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - broker
    - api
  tags: go

- name: create python app deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - message-handler
    - apiv1
  tags: python

- name: create frontend app deployments
  shell: kubectl apply -f {{ yaml_url }}/deployments/{{ item }}-deployment.yaml
  with_items:
    - frontend
  tags: frontend

- name: copy htpasswd file
  copy:
    src: "files/auth"
    dest: "{{ caliopen_config_path }}"
    owner: "root"
    mode: 0600

- name: create htpasswd secret
  shell: kubectl create secret generic basic-auth --from-file=auth --namespace kube-system
  args:
    chdir: "{{ caliopen_config_path }}"

- name: setup ingress controller and default backend
  shell: kubectl apply -f {{ yaml_url }}/ingress/{{ item }}-ingress.yaml
  with_items:
    - setup
  tags: ingress

- name: create nginx and dashboard services
  shell: kubectl apply -f {{ yaml_url }}/services/{{ item }}-service.yaml
  with_items:
    - nginx
    - dashboard
  tags: ingress

- name: create ingress rules
  shell: kubectl apply -f {{ yaml_url }}/ingress/{{ item }}-ingress.yaml
  with_items:
    - caliopen
    - dashboard
  tags: ingress

- name: start kubeapi proxy
  shell: kubectl proxy --port {{ kubeapi_port }} --address {{ master_private_ip }} --accept-hosts '.*' &