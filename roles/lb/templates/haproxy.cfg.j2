global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
	tune.ssl.default-dh-param 2048

defaults
	log	global
    timeout connect 5s
    timeout client  30s
    timeout server  30s
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend non-secure
	mode http
	bind *:80
	#Redirect HTTP traffic to HTTPS
    http-request redirect scheme https code 301 if !{ ssl_fc }

frontend caliopen
	bind *:443 ssl crt /etc/haproxy/certs/caliopen-certs.pem
	mode tcp
	tcp-request inspect-delay 5s
  	tcp-request content accept if { req_ssl_hello_type 1 }

 	acl frontend ssl_fc_sni -i k8s-client.alpha.caliopen.org
    acl api ssl_fc_sni -i k8s-api.alpha.caliopen.org
    acl dashboard ssl_fc_sni -i k8s-dash.alpha.caliopen.org

  	use_backend api_back if api
  	use_backend frontend_back if frontend
  	use_backend dashboard_back if dashboard

	default_backend frontend_back

backend frontend_back
	mode http
	balance roundrobin
	option httpchk GET /healthz HTTP/1.1\r\nHost:\ _
	http-check expect status 200

	# maximum SSL session ID length is 32 bytes.
  	stick-table type binary len 32 size 30k expire 30m

  	#acl clienthello req_ssl_hello_type 1
	#acl serverhello rep_ssl_hello_type 2

	# use tcp content accepts to detects ssl client and server hello.
	#tcp-request inspect-delay 5s
	#tcp-request content accept if clienthello

	# no timeout on response inspect delay by default.
	#tcp-response content accept if serverhello
	#stick on payload_lv(43,1) if clienthello

	# Learn on response if server hello.
	#stick store-response payload_lv(43,1) if serverhello
	#option ssl-hello-chk

	http-request set-header Host alpha.caliopen.org
    server master {{ master_private_ip }}:30080 check port 30880 send-proxy
    server node0  {{ node0_private_ip }}:30080 check port 30880 send-proxy
    server node1  {{ node1_private_ip }}:30080 check port 30880 send-proxy
    server node2  {{ node2_private_ip }}:30080 check port 30880 send-proxy

backend api_back
	mode http
	balance roundrobin
	option httpchk GET /healthz HTTP/1.1\r\nHost:\ _
	http-check expect status 200

	# maximum SSL session ID length is 32 bytes.
  	stick-table type binary len 32 size 30k expire 30m

  	http-request set-header Host api.caliopen.org
    server master {{ master_private_ip }}:30080 check port 30880 send-proxy
    server node0  {{ node0_private_ip }}:30080 check port 30880 send-proxy
    server node1  {{ node1_private_ip }}:30080 check port 30880 send-proxy
    server node2  {{ node2_private_ip }}:30080 check port 30880 send-proxy


backend dashboard_back
	mode http
	balance roundrobin
	option httpchk GET /healthz HTTP/1.1\r\nHost:\ _
	http-check expect status 200

	# maximum SSL session ID length is 32 bytes.
  	stick-table type binary len 32 size 30k expire 30m

  	http-request set-header Host dashboard.caliopen.org
    server master {{ master_private_ip }}:30080 check port 30880 send-proxy
    server node0  {{ node0_private_ip }}:30080 check port 30880 send-proxy
    server node1  {{ node1_private_ip }}:30080 check port 30880 send-proxy
    server node2  {{ node2_private_ip }}:30080 check port 30880 send-proxy
