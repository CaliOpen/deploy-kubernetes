global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3
	tune.ssl.default-dh-param 2048

defaults
	log	global
    timeout connect 5s
    timeout client  30s
    timeout server  30s
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

userlist admin
	user caliope-dashboard password {{ dashboard_password }}

### FRONTENDS ###

frontend http
	mode http
	bind *:80
	#Redirect HTTP traffic to HTTPS
	http-request redirect scheme https code 301 if !{ ssl_fc }

frontend caliopen
	bind *:443 ssl crt /etc/haproxy/certs/beta-certs.pem
	mode http

	option forwardfor
	option http-server-close
	http-request set-header X-Client-IP %[src]

	# Ingress managed domain, HAProxy acts only as SSL termination
	acl caliopenapp ssl_fc_sni_end -i caliopen.app

	acl frontend ssl_fc_sni -i web.{{ caliopen_domain_name }}
	acl api ssl_fc_sni -i api.{{ caliopen_domain_name }}
	acl apiv2 path_beg -i /api/v2
	acl apiv1 path_beg -i /api/v1
	acl dashboard ssl_fc_sni -i dash.{{ caliopen_domain_name }}

	use_backend caliopenapp_back if caliopenapp

	use_backend apiv2_back if api apiv2
	use_backend apiv1_back if api apiv1
	use_backend frontend_back if frontend
	use_backend dashboard_back if dashboard

### Only visible within the private VLAN
## Used by SMTP
frontend redis
	bind {{ bastion_private_ip }}:6379
	mode tcp

	default_backend redis_backend

# Production lmtp
frontend lmtp
	bind {{ bastion_private_ip }}:2525
	mode tcp

	default_backend lmtp_backend

# Staging lmtp
	bind {{ bastion_private_ip }}:22525
	mode tcp

	default_backend lmtp_staging_backend

# Used by Grafana, will be deleted when moved into the cluster
frontend prometheus
	bind {{ bastion_private_ip }}:9090
	mode http

	default_backend prom_backend

### BACKENDS ###

# Ingress controller backend, no https
backend caliopenapp_back
	# Ingress routes based on Host header
	http-request set-header Host %[ssl_fc_sni]
	mode http

	server node0 {{ node0_private_ip }}:30080
	server node1 {{ node1_private_ip }}:30080 backup

## Backends exposed through NodePorts

backend frontend_back
	mode http
	balance roundrobin
	option httpchk
	http-check expect ! rstatus ^5

    server node0  {{ node0_private_ip }}:30400 check
    server node1  {{ node1_private_ip }}:30400 check
    server master {{ master_private_ip }}:30400 check backup

backend apiv1_back
	mode http
	balance roundrobin
	option httpchk
	http-check expect ! rstatus ^5

    server node0  {{ node0_private_ip }}:31416 check
    server node1  {{ node1_private_ip }}:31416 check
    server master {{ master_private_ip }}:31416 check backup

backend apiv2_back
	mode http
	balance roundrobin
	option httpchk GET username/isAvailable
	http-check expect ! rstatus ^5

    server node0  {{ node0_private_ip }}:31415 check
    server node1  {{ node1_private_ip }}:31415 check
    server master {{ master_private_ip }}:31415 check backup

backend dashboard_back
	mode http
	balance roundrobin
	option httpchk
	http-check expect ! rstatus ^5

	acl authOK http_auth(admin)
	http-request auth realm k8s-dashboard if !authOK

    server node0  {{ node0_private_ip }}:31045 check
    server node1  {{ node1_private_ip }}:31045 check
    server node2  {{ node2_private_ip }}:31045 check
    server node3  {{ node3_private_ip }}:31045 check
    server node4  {{ node4_private_ip }}:31045 check
    server master {{ master_private_ip }}:31045 check backup

## Internal backends

backend lmtp_backend
	mode tcp
	balance roundrobin
	option smtpchk

    server node2  {{ node2_private_ip }}:32525 check
    server node3  {{ node3_private_ip }}:32525 check
    server node4  {{ node4_private_ip }}:32525 check
    server master {{ master_private_ip }}:32525 check backup

backend lmtp_staging_backend
	mode tcp
	balance roundrobin
	option smtpchk

    server node2  {{ node2_private_ip }}:32225 check
    server node3  {{ node3_private_ip }}:32225 check
    server node4  {{ node4_private_ip }}:32525 check
    server master {{ master_private_ip }}:32225 check backup

backend prom_backend
	mode http
	balance roundrobin
	option httpchk

    server node2  {{ node2_private_ip }}:31090 check
    server node3  {{ node3_private_ip }}:31090 check backup
    server node4  {{ node4_private_ip }}:31090 check backup
    server master {{ master_private_ip }}:31090 check backup

backend redis_backend
	mode tcp
	balance roundrobin

	server node2  {{ node2_private_ip }}:31379 check
	server node3  1{{ node3_private_ip }}:31379 check backup
    server node4  {{ node4_private_ip }}:31379 check backup
	server master {{ master_private_ip }}:31379 check backup
