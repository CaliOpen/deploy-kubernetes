apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        type: storage
        tier: backend
        app: redis
    spec:
      containers:
      - image: redis
        name: redis
        ports:
        - containerPort: 6379
        args:
        - /etc/redis/redis.conf
        resources:
          limits:
            cpu: 200m
            memory: 512Mi 
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: data-dir
          mountPath: /redis-data
        - name: config
          mountPath: /etc/redis/
      volumes:
      - name: data-dir
        persistentVolumeClaim:
          claimName: redis-persistent
      - name: config
        configMap:
          name: redis-config
          items:
            - key: redis-config
              path: redis.conf
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 9121
      restartPolicy: Always
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - node2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - internal
---

apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: storage
spec:
  selector:
    app: redis
  type: NodePort
  ports:
  - name: "redis"
    port: 6379
    nodePort: 31379
  - name: "redis-metrics"
    port: 9121

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-persistent
  namespace: storage
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: redis-storage

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: redis-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  namespace: storage
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: redis-storage
  local:
    path: /etc/redis/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
            - node2
